hydra:
  run:
    dir: outputs/${now:%Y-%m-%d}/${now:%H-%M-%S}
  sweep:
    dir: multirun/${now:%Y-%m-%d}/${now:%H-%M-%S}
    subdir: ${hydra.job.num}
  launcher:
    _target_: hydra._internal.core_plugins.basic_launcher.BasicLauncher
  sweeper:
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 42
      consider_prior: true
      prior_weight: 1.0
      consider_magic_clip: true
      consider_endpoints: false
      n_startup_trials: 10
      n_ei_candidates: 24
      multivariate: false
      warn_independent_sampling: true
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    direction: maximize
    storage: null
    study_name: xgb_mock
    n_trials: 10
    n_jobs: 1
    search_space: null
    params:
      classifier:
        _target_: xgboost.XGBClassifier
      learning_rate: choice(0.3, 0.1, 0.05, 0.01, 0.005, 0.001, 0.0005, 0.0001)
      gamma: choice(0, 0.1, 0.2, 0.3, 0.4, 0.5)
      max_depth: choice(3, 4, 5, 6, 7, 8, 9, 10)
      min_child_weight: choice(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
      max_delta_step: choice(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
      subsample: choice(0.6, 0.7, 0.8, 0.9, 1.0)
      sampling_method: choice('uniform', 'gradient_based')
      colsample_bytree: choice(0.6, 0.7, 0.8, 0.9, 1.0)
      lambda: choice(0, 0.1, 0.2, 0.3, 0.4, 0.5)
      tree_method: choice('auto', 'exact', 'approx', 'hist', 'gpu_hist')
      grow_policy: choice('depthwise', 'lossguide')
      max_leaves: choice(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
    custom_search_space: null
  help:
    app_name: ${hydra.job.name}
    header: '${hydra.help.app_name} is powered by Hydra.

      '
    footer: 'Powered by Hydra (https://hydra.cc)

      Use --hydra-help to view Hydra specific help

      '
    template: '${hydra.help.header}

      == Configuration groups ==

      Compose your configuration from those groups (group=option)


      $APP_CONFIG_GROUPS


      == Config ==

      Override anything in the config (foo.bar=value)


      $CONFIG


      ${hydra.help.footer}

      '
  hydra_help:
    template: 'Hydra (${hydra.runtime.version})

      See https://hydra.cc for more info.


      == Flags ==

      $FLAGS_HELP


      == Configuration groups ==

      Compose your configuration from those groups (For example, append hydra/job_logging=disabled
      to command line)


      $HYDRA_CONFIG_GROUPS


      Use ''--cfg hydra'' to Show the Hydra config.

      '
    hydra_help: ???
  hydra_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][HYDRA] %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers:
      - console
    loggers:
      logging_example:
        level: DEBUG
    disable_existing_loggers: false
  job_logging:
    version: 1
    formatters:
      simple:
        format: '[%(asctime)s][%(name)s][%(levelname)s] - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        formatter: simple
        stream: ext://sys.stdout
      file:
        class: logging.FileHandler
        formatter: simple
        filename: ${hydra.runtime.output_dir}/${hydra.job.name}.log
    root:
      level: INFO
      handlers:
      - console
      - file
    disable_existing_loggers: false
  env: {}
  mode: RUN
  searchpath: []
  callbacks: {}
  output_subdir: .hydra
  overrides:
    hydra:
    - hydra.mode=RUN
    task: []
  job:
    name: main
    chdir: null
    override_dirname: ''
    id: ???
    num: ???
    config_name: config
    env_set: {}
    env_copy: []
    config:
      override_dirname:
        kv_sep: '='
        item_sep: ','
        exclude_keys: []
  runtime:
    version: 1.3.2
    version_base: '1.1'
    cwd: /home/basia/Desktop/cross-adaptation
    config_sources:
    - path: hydra.conf
      schema: pkg
      provider: hydra
    - path: /home/basia/Desktop/cross-adaptation/experiments/config
      schema: file
      provider: main
    - path: ''
      schema: structured
      provider: schema
    output_dir: /home/basia/Desktop/cross-adaptation/outputs/2023-05-30/12-17-58
    choices:
      classifier: xgb
      classifier@hydra.sweeper.params: xgb
      hydra/env: default
      hydra/callbacks: null
      hydra/job_logging: default
      hydra/hydra_logging: default
      hydra/hydra_help: default
      hydra/help: default
      hydra/sweeper: optuna
      hydra/sweeper/sampler: tpe
      hydra/launcher: basic
      hydra/output: default
  verbose: false
